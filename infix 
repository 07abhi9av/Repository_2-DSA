def precedence(operator):
    if operator == '+' or operator == '-':
        return 1
    elif operator == '*' or operator == '/':
        return 2
    return 0

def infix_to_postfix(expression):
    stack = []
    postfix = ''
    
    for char in expression:
        if char.isalnum():  # Operand
            postfix += char
        elif char == '(':
            stack.append(char)
        elif char == ')':
            while stack and stack[-1] != '(':
                postfix += stack.pop()
            stack.pop()  # Remove '('
        else:  # Operator
            while stack and precedence(stack[-1]) >= precedence(char):
                postfix += stack.pop()
            stack.append(char)
    
    while stack:
        postfix += stack.pop()
    
    return postfix

# Take user input
infix_expression = input("Enter the infix expression: ")
postfix_expression = infix_to_postfix(infix_expression)
print("Postfix expression:", postfix_expression)